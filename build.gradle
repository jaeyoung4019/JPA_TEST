buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'war'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'toy.project.local_specialty'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	// Spring JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Spring lombok
	compileOnly 'org.projectlombok:lombok'
	// Spring MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'
	// lombok
	annotationProcessor 'org.projectlombok:lombok'
	// tomcat
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	// Spring Valid
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// Swagger
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	//implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	implementation("io.springfox:springfox-swagger2:2.9.2") {
		exclude module: 'swagger-annotations'
		exclude module: 'swagger-models'
	}
	implementation('io.swagger:swagger-annotations:1.6.6')
	implementation('io.swagger:swagger-models:1.6.6')
	// JSON
	implementation 'org.json:json:20220320'
	implementation 'com.google.code.gson:gson:2.8.6'
	// Spring Security Jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	//test
	// JUnit
	implementation 'junit:junit:4.13.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	// Query dsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	//query parameter log용
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'

}

tasks.named('test') {
	useJUnitPlatform()
}

/*
 * queryDSL 설정 추가
 */
// querydsl에서 사용할 경로 설정
def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
	main.java.srcDir querydslDir
}
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
// querydsl 이 compileClassPath 를 상속하도록 설정
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
